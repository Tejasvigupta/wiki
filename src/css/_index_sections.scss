/******************************
* Homepage Sections
******************************/

@use 'sass:list';

section {
  padding: 5rem 0 1.5rem 0;
  position: relative;

  .container {
    max-width: 1380px;
  }

  /**
   * Section Button
   */

  a:not(.button) {
    position: relative;
    text-decoration: none;
    display: inline-block;
    color: black;
    padding: 0 1px;
    transition: color ease 0.3s;

    &:before,
    &:after {
      content: "";
      position: absolute;
      background-color: $green;
      height: 10%;
    }

    &:before {
      width: 0%;
      left: 0;
      bottom: 0;
      transition: width ease 0.4s;
    }

    &:after {
      width: 100%;
      left: 0;
      bottom: 0;
      transition: all ease 0.6s;
    }

    &:hover {
      text-decoration: none;
      color: $black;

      &::before {
        width: 100%;
      }

      &::after {
        left: 100%;
        width: 0%;
        transition: all ease 0.2s;
      }
    }
  }

  /**
   * Section subtitle/aside
   */

  .sidebar h3 {
    font-family: "Lato", sans-serif;
    font-weight: 700;
    font-size: 1.25rem;
    border-top: 1px solid !important;
    padding-top: 10px;
    margin-top: 10px;
    word-spacing: 0.2em;
    line-height: 1.3em;
  }

  .content {
    font-family: "Merriweather", serif;

    /**
    * Section Title
    **/

    h2 {
      font-family: "Merriweather", serif;
      font-weight: 400;
      font-size: calc(1.625rem + 1vw);
      margin-bottom: 1.2rem;
      word-spacing: 0.3rem;
      line-height: 1.5;

      span {
        color: $green;
        font-weight: 400;
      }
    }

    h3 {
      font-style: italic;
      font-size: 1.2rem;
      font-weight: 400;
      font-family: "Merriweather", serif;
      padding-bottom: 10px;
      display: none;
    }

    p {
      font-weight: 400;
      font-size: 1.2rem;
      line-height: 1.75;
      word-spacing: 0.1rem;
      color: #3d3d3d;
    }
  }

  &:nth-of-type(odd) {
    .sidebar {
      padding: 0 50px 0 0;
      h3 {
        text-align: left;
      }
    }

    .content {
      padding: 0 0 0 25px;
    }
  }

  &:nth-of-type(even) {
    .sidebar {
      padding: 0 0 0 50px;
      h3 {
        text-align: right;
      }
    }

    .content {
      padding: 0 25px 0 0;
    }
  }

  @for $i from 1 through 6 {
    &.section#{$i} {
      background-color: list.nth($section-backgrounds, $i);

      h3 {
        border-color: list.nth($section-accents, $i);
        color: list.nth($section-accents, $i);
      }
      h2 {
        color: list.nth($section-headings, $i);
        span {
          color: list.nth($section-accents, $i);
        }
      }
      p {
        color: list.nth($section-texts, $i);
      }
      a.button {
        .circle {
          background-color: list.nth($section-accents, $i);;
          .icon {
            &.arrow {
              background-color: none !important;
              &::before {
                border-color: white;
              }
            }
          }
        }
        .button-text {
          color:list.nth($section-texts, $i);
          font-weight: 700 !important;
        }
        &:hover {
          .circle {
            .icon {
              &.arrow {
                background: white;
              }
            }
          }
          .button-text {
            color: white;
          }
        }
      }
    }
  }

  .section-animation {
    width: 100%;
    height: 100%;
    position: absolute;
    margin-top: -5rem;

    .bacteria-wrapper {
      animation-iteration-count: infinite;
      animation-timing-function: linear;
      animation-name: orbit;
      animation-duration: 2s;

      &:first-of-type {
        animation-delay: 0.75s;
      }
    }

    .bacteria {
      animation: self-rotate 1.5s ease-in-out infinite alternate;
      background: url(../assets/icons/bacteria.svg);
      background-position: center;
      background-size: contain;
      margin: 20px;
      width: 100px;
      height: 100px;
      position: absolute;
    }
  }
}

@keyframes orbit {
  0% {
    -webkit-transform: rotate(0deg) translateX(2px) rotate(0deg);
    transform: rotate(0deg) translateX(2px) rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(1turn) translateX(2px) rotate(-1turn);
    transform: rotate(1turn) translateX(2px) rotate(-1turn);
  }
}

@keyframes self-rotate {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(-7deg);
    transform: rotate(-7deg);
  }
}
