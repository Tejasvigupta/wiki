extends ../templates/contents.pug

block headVars
    - var title = "Contribution"
    - var requireMathJax = false
    //- You can just write the filename here and it will be resolved to 'require'.
    //- var backgroundImage = "" + require("../assets/img/Description--josh-withers.jpg")["default"]
    - var backgroundImage = "" + require("../assets/img/Contribution--header.png")["default"]
    - var backgroundAttribution = "Photo from Freepik"
    - var backgroundAttributionLink = "https://www.freepik.com/free-vector/public-contribution-concept_2448540.htm"
    - var theme = "contribution"
    - var fullWidth = true

block article
    :markdown-it(html)

        As a team participating in iGEM for the first time, we were absolutely thrilled by the community spirit that iGEM 
        fosters. It was amazing to see how helpful everyone was, and over the years, participating teams had developed 
        into a tightly-knit community, working together on shared goals and aspirations, and having lots of fun along the way!

        The Bronze medal criterion for contribution towards future iGEM teams gave us a chance to give back to this community.
        We worked on the following projects as part of this endeavour.

        1. [iGEM WikiSync](/Software#iGEMWikiSync): A continuous deployment tool for iGEM wikis. It automatically uploads files onto the iGEM server, 
                converts relative URLs in the codebase to absolute URLs from iGEM servers, and in the process also checks
                for broken links.

        2. [iGEM WikiSync Github Action](/Software#iGEMWikiSyncGithubAction): A Github Actions plugin that allows
                Github repositories to deploy wikis to iGEM servers, ensuring that the wiki always remains in sync with the codebase. 

        3. [iGEM Wiki Starter Pack](/Software#iGEMWikiStarterPack): The easiest way to build iGEM Wikis. Our Starter Pack 
                is a holistic solution that provies teams with a mobile-responsive starter template and allows them to focus on the
                content and design of their wiki, by making the programming aspect much easier. It fully supports Markdown 
                formatting, so that once the initial design setup is done, all members of the team can work on the wiki, without 
                having to learn to code. It comes with common web development libraries like Bootstrap, jQuery, MathJax and Font 
                Awesome built-in, along with features like automatically adding citations from DOI, a table of contents on each 
                page, and a dark mode to make it easier on the eyes. Built on top of the node.js infrastructure using Webpack,
                it allows easily integrating any web development library from the entire ecosystem. It also includes Pug for 
                templating, SCSS for easy and powerful styling and iGEM WikiSync for continuous deployment.

        4. We have added new information learnt from literature and new data and inferences learnt from our mathematical models to the existing part [BBa_K2448032](http://parts.igem.org/Part:BBa_K2448032).

        Our software contribution has been covered in great detail on [the Software page](/Software). Please head over there to know more about some
        common use cases, installation instructions and documentation.

        As a part of our phase two contribution, we plan on working on a web application in order to make it easier for iGEM teams to construct golden gate assemblies using
        parts from the registry according to iGEM specifications. This would allow importing data from the parts registry, modifying it 
        according to iGEM Golden Gate specifications, and exporting it to platforms like Benchling.

append buttons
    //- mind the quotes and the plus sign
    +buttonLeft("Home")
    +buttonRight("Software")

//- DO NOT MODIFY THIS LINE AND ANYTHING BEYOND.
